(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{423:function(e,a,t){"use strict";t.r(a);var c=t(44),r=Object(c.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"介绍下webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍下webpack"}},[e._v("#")]),e._v(" 介绍下webpack")]),e._v(" "),t("h4",{attrs:{id:"什么是webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是webpack"}},[e._v("#")]),e._v(" 什么是webpack")]),e._v(" "),t("p",[e._v("webpack 就是一个javascript应用程序的"),t("code",[e._v("打包工具")]),e._v("，当 webpack 处理应用程序时，它会递归地构建一个依赖关系图，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个 bundle。")]),e._v(" "),t("p",[e._v("简单来说，WebPack会分析你的项目结构，找到JavaScript模块以及其它的一些浏览器不能直接运行的拓展语言（Scss，TypeScript等），并将其打包编译为合适的格式以供浏览器使用。")]),e._v(" "),t("h4",{attrs:{id:"webpack的核心概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack的核心概念"}},[e._v("#")]),e._v(" webpack的核心概念")]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("Entry")]),e._v("：入口，Webpack执行构建的第一步将从Entry开始，可抽象成输入。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("Module")]),e._v("：模块，在Webpack里一切皆模块，一个模块对应着一个文件。Webpack会从配置的Entry开始递归找出所有依赖的模块。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("Chunk")]),e._v("：代码块，一个Chunk由多个模块组合而成，用于代码合并与分割。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("Loader")]),e._v("：模块转换器，用于把模块原内容按照需求转换成新内容。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("Plugin")]),e._v("：扩展插件，在Webpack构建流程中的特定时机会广播出对应的事件，插件可以监听这些事件的发生，在特定时机做对应的事情。")])])]),e._v(" "),t("h4",{attrs:{id:"webpack的工作流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack的工作流程"}},[e._v("#")]),e._v(" webpack的工作流程")]),e._v(" "),t("p",[e._v("Webpack的构建流程可以分为以下三大阶段：")]),e._v(" "),t("ol",[t("li",[t("p",[t("code",[e._v("初始化")]),e._v("：启动构建，读取与合并配置参数，加载Plugin，实例化Compiler。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("编译")]),e._v("：从Entry发出，针对每个Module串行调用对应的Loader去翻译文件内容，再找到该Module依赖的Module，递归地进行编译处理。")])]),e._v(" "),t("li",[t("p",[t("code",[e._v("输出")]),e._v("：对编译后的Module组合成Chunk，把Chunk转换成文件，输出到文件系统")])])]),e._v(" "),t("h4",{attrs:{id:"webpack的工作原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack的工作原理"}},[e._v("#")]),e._v(" webpack的工作原理")]),e._v(" "),t("p",[e._v("简单的说就是"),t("code",[e._v("分析代码")]),e._v("，找到“require”、“exports”、“define”等关键词，并替换成对应模块的引用。")]),e._v(" "),t("p",[e._v("在一个配置文件中，指明对某些文件进行编译、压缩、组合等任务。把你的项目当成一个整体，通过一个给定的主文件index.js，webpack将从这个文件开始找到你的项目的所有的依赖文件，使用loaders处理他们，最后打包为一个浏览器可以识别的js文件。")]),e._v(" "),t("p",[e._v("webpack的理念就是"),t("code",[e._v("一切皆模块化")]),e._v("，把一堆的css文件和js文件放在一个总的入口文件，通过require引入，剩下的事情webpack会处理，包括所有模块的前后依赖关系，打包、压缩、合并成一个js文件，公共代码抽离成一个js文件、某些自己指定的js单独打包，模块可以是css/js/images/font等等。")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/weixin_41698051/article/details/106681167",target:"_blank",rel:"noopener noreferrer"}},[e._v("详解"),t("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);