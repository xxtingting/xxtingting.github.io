(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{403:function(t,s,h){"use strict";h.r(s);var a=h(44),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,h=t._self._c||s;return h("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[h("h3",{attrs:{id:"vue-router的hash和history模式"}},[h("a",{staticClass:"header-anchor",attrs:{href:"#vue-router的hash和history模式"}},[t._v("#")]),t._v(" vue-router的hash和history模式")]),t._v(" "),h("p",[t._v("vue-router 的路由有两种模式：")]),t._v(" "),h("ol",[h("li",[t._v("hash模式")]),t._v(" "),h("li",[t._v("history模式")])]),t._v(" "),h("h4",{attrs:{id:"区别"}},[h("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别：")]),t._v(" "),h("ul",[h("li",[h("p",[t._v("hash模式url上有 # 号，history没有")])]),t._v(" "),h("li",[h("p",[t._v("刷新页面时，hash 模式可以正常加载到 hash 值对应的页面，而 history 没有处理的话，会返回 404，一般需要后端将所有页面都配置重定向到首页路由")])]),t._v(" "),h("li",[h("p",[t._v("兼容性，hash 可以支持低版本浏览器和 IE。")])])]),t._v(" "),h("h4",{attrs:{id:"原理"}},[h("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),h("ul",[h("li",[h("p",[t._v("hash： 通过监听 hashchange 事件可以知道 hash 发生了哪些变化，然后根据 hash 变化来实现更新页面部分内容的操作")])]),t._v(" "),h("li",[h("p",[t._v("history： 利用H5提供的 pushState 和 replaceState这两个 API 可以在改变 url，但是不会发送请求。这样就可以监听 url 变化来实现更新页面部分内容的操作")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);