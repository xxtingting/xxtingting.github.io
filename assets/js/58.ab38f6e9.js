(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{414:function(t,r,s){"use strict";s.r(r);var a=s(44),v=Object(a.a)({},(function(){var t=this,r=t.$createElement,s=t._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"css的盒子模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css的盒子模型"}},[t._v("#")]),t._v(" CSS的盒子模型")]),t._v(" "),s("p",[t._v("所有HTML元素可以看作盒子")]),t._v(" "),s("p",[t._v("CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("margin（外边距）")])]),t._v(" "),s("li",[s("p",[t._v("border（边框）")])]),t._v(" "),s("li",[s("p",[t._v("padding（内边距）")])]),t._v(" "),s("li",[s("p",[t._v("content（内容）")])])]),t._v(" "),s("h4",{attrs:{id:"盒子模型分为两种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型分为两种"}},[t._v("#")]),t._v(" 盒子模型分为两种")]),t._v(" "),s("ol",[s("li",[t._v("W3C盒子模型(标准盒模型)")])]),t._v(" "),s("p",[t._v("根据 W3C 的规范，元素内容占据的空间是由 width 属性设置的，而内容周围的 padding 和 border 值是另外计算的")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("IE盒子模型(怪异盒模型)")])]),t._v(" "),s("p",[t._v("在该模式下，浏览器的 width 属性不是内容的宽度，而是内容、内边距和边框的宽度的总和；")])])}),[],!1,null,null,null);r.default=v.exports}}]);